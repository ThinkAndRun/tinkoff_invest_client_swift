//
// OperationsAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

open class OperationsAPI {
    /**
     Получение списка операций
     
     - parameter from: (query) Начало временного промежутка 
     - parameter to: (query) Конец временного промежутка 
     - parameter figi: (query) Figi инструмента для фильтрации (optional)
     - parameter brokerAccountId: (query) Номер счета (по умолчанию - Тинькофф) (optional)
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func operationsGet(from: Date, to: Date, figi: String? = nil, brokerAccountId: String? = nil, apiResponseQueue: DispatchQueue = TinkoffInvestClientAPI.apiResponseQueue, completion: @escaping ((_ data: OperationsResponse?, _ error: Error?) -> Void)) {
        operationsGetWithRequestBuilder(from: from, to: to, figi: figi, brokerAccountId: brokerAccountId).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Получение списка операций
     - GET /operations
     - BASIC:
       - type: http
       - name: sso_auth
     - parameter from: (query) Начало временного промежутка 
     - parameter to: (query) Конец временного промежутка 
     - parameter figi: (query) Figi инструмента для фильтрации (optional)
     - parameter brokerAccountId: (query) Номер счета (по умолчанию - Тинькофф) (optional)
     - returns: RequestBuilder<OperationsResponse> 
     */
    open class func operationsGetWithRequestBuilder(from: Date, to: Date, figi: String? = nil, brokerAccountId: String? = nil) -> RequestBuilder<OperationsResponse> {
        let path = "/operations"
        let URLString = TinkoffInvestClientAPI.basePath + path
        let parameters: [String: Any]? = nil

        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "from": from.encodeToJSON(),
            "to": to.encodeToJSON(),
            "figi": figi?.encodeToJSON(),
            "brokerAccountId": brokerAccountId?.encodeToJSON(),
        ])

        let nillableHeaders: [String: Any?] = [
            :
        ]

        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<OperationsResponse>.Type = TinkoffInvestClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, headers: headerParameters)
    }

}
